{"version":3,"sources":["imgs/icon.png","componentes/FavoriteCard.js","store/types.js","services/weatherService.js","services/favoriteService.js","store/actions/favoriteActions.js","store/actions/weatherActions.js","views/favoritesList.js","componentes/header.js","componentes/DayCard.js","views/homePage.js","App.js","serviceWorker.js","store/reducers/index.js","store/reducers/weatherReducer.js","store/reducers/favoritesReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","favortieItemCard","removeFavoriteItem","_this","props","city","key","goToFavoriteItem","cityName","dayIcon","_this$props","this","celsius","currWeather","WeatherIcon","react_default","a","createElement","Card","title","_id","style","width","height","Body","Title","className","onClick","countryName","Subtitle","WeatherText","Img","variant","src","concat","Temperature","Metric","Value","Imperial","Spinner","animation","Component","types","GET_CURR_WEATHER_BY_SEARCH","GET_FAVORITES","GET_USER_LOC","CHANGE_TEMPERATURE","weatherService","getAutoComplete","getFiveDaysForcast","getCurrWeather","getPosition","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","getUserCurrLocWeather","apiKey","_callee","txt","res","regenerator_default","wrap","_context","prev","next","Axios","get","sent","abrupt","data","t0","stop","_callee2","locKey","_context2","_callee3","_context3","_callee4","lat","lng","_context4","favoriteService","getAllFavorites","addToFavorites","favorites","push","_makeId","_createFavorite","_saveToStorage","removeFromFavorites","favoriteKey","favoriteIdx","findIndex","item","splice","_loadFromStorage","_updateFavoritesWeather","i","length","arguments","undefined","possible","charAt","Math","floor","random","value","strValue","JSON","stringify","localStorage","setItem","parse","getItem","getFavorites","_ref","Object","asyncToGenerator","mark","dispatch","response","type","_x","apply","addFavorite","_ref2","_x2","removeFavorite","_ref3","_x3","searchBy","resAutoComplete","resCurrWeather","resFiveDays","currCityWeather","Key","LocalizedName","Country","ID","fiveDaysForcast","DailyForecasts","cityWeather","changeTemperature","favoritesList","cityKey","notify","favoriteItemCityName","history","toast","_this2","react_toastify","Badge","map","FavoriteCard_favortieItemCard","connect","favoritesReducer","weatherReducer","header","state","light","handleThemeChange","setState","_objectSpread","document","body","backgroundColor","toggleTemperature","Navbar","bg","expand","Brand","href","alt","require","Toggle","aria-controls","Collapse","id","Nav","Link","day","weekDay","celTempMax","Maximum","celTempMin","Minimum","Day","Icon","IconPhrase","homePage","searchByCity","isCityInFavorites","e","favoriteToAdd","preventDefault","homePage_objectSpread","handleSearch","regex","name","chars","_char","target","split","char","pop","test","defineProperty","handleSubmit","find","userLocDetails","userLocRes","coords","latitude","longitude","userLoc","weekDays","todayDay","Date","getDay","onSubmit","required","onChange","placeholder","idx","DayCard_favortieItemCard","_ref5","currFavorite","App","react_router_dom","componentes_header","react_router","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","combinedReducer","combineReducers","action","weatherReducer_objectSpread","favoritesReducer_objectSpread","GET_FAVORITE_BY_ID","middleware","thunk","store","createStore","reducer","applyMiddleware","ReactDOM","render","es","src_App_0","getElementById","URL","process","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","prompt"],"mappings":"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","file":"static/js/main.27d8746d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.07227aeb.png\";","import React, { Component } from 'react';\r\nimport {Card,Spinner} from 'react-bootstrap';\r\n\r\nexport default class favortieItemCard extends Component {\r\n\r\nremoveFavoriteItem=()=> { \r\n    this.props.removeFavoriteItem(this.props.city.key)\r\n}\r\n\r\n\r\ngoToFavoriteItem=()=> { \r\n    this.props.goToFavoriteItem(this.props.city.cityName)\r\n}\r\n\r\n\r\n\r\n    render() {\r\n        const {city,celsius}  = this.props;\r\n        var dayIcon;\r\n        if(city.currWeather[0]){ \r\n            if(city.currWeather[0].WeatherIcon <=9 )  dayIcon = \"0\" + city.currWeather[0].WeatherIcon\r\n            else dayIcon = city.currWeather[0].WeatherIcon;\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                {city.currWeather[0] &&\r\n                    <Card title={city.cityName} key={city._id} style={{ width: '12rem', height: '19rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Title className=\"favorite-title\" onClick={this.goToFavoriteItem} >{city.cityName},{city.countryName}</Card.Title>\r\n                        </Card.Body>\r\n                        <Card.Subtitle className=\"mb-2 text-muted\">{city.currWeather[0].WeatherText}</Card.Subtitle>\r\n                        <Card.Img variant=\"top\" src={`https://apidev.accuweather.com/developers/Media/Default/WeatherIcons/${dayIcon}-s.png`} />\r\n                        {celsius &&\r\n                             <Card.Subtitle className=\"mb-2 text-muted\">{city.currWeather[0].Temperature.Metric.Value}°C</Card.Subtitle>\r\n                        }\r\n                        {!celsius && \r\n                             <Card.Subtitle className=\"mb-2 text-muted\">{city.currWeather[0].Temperature.Imperial.Value}°F</Card.Subtitle>\r\n                        }\r\n                        \r\n                        <button onClick={this.removeFavoriteItem}>Remove</button>\r\n                    </Card>\r\n                }\r\n                {!city.currWeather[0] &&\r\n                     <Spinner animation=\"grow\" variant=\"info\" />\r\n                }\r\n            \r\n            </div>\r\n        \r\n        )\r\n    }\r\n}","const  types = { \r\n    GET_CURR_WEATHER_BY_SEARCH : \"Get_CURR_WEATHER_BY_SEARCH\", \r\n    GET_FAVORITES : \"Get_FAVORITES\",\r\n    GET_USER_LOC:'GET_USER_LOC',\r\n    CHANGE_TEMPERATURE:'CHANGE_TEMPERATURE'\r\n};\r\nexport default types;","import Axios from 'axios';\r\n\r\n\r\nexport default {\r\ngetAutoComplete,\r\ngetFiveDaysForcast,\r\ngetCurrWeather,\r\ngetPosition,\r\ngetUserCurrLocWeather,\r\n}\r\n\r\nconst apiKey = 'knnG3d5le7I9GPG1UGpGIpqtXXVXht5D';\r\n\r\nasync function getAutoComplete(txt) {\r\n    try {\r\n      const res = await Axios.get((`https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${apiKey}&q=${txt}`))\r\n      return res.data[0]\r\n    }\r\n    catch (err) {\r\n     throw err;\r\n    }\r\n}\r\n\r\nasync function getFiveDaysForcast(locKey) {\r\n    try {\r\n      const res = await Axios.get((`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${locKey}?apikey=${apiKey}`))\r\n      return res.data\r\n    }\r\n    catch (err) {\r\n     throw err;\r\n    }\r\n}\r\n\r\nasync function getCurrWeather(locKey) {\r\n    try {\r\n      const res = await Axios.get((`https://dataservice.accuweather.com/currentconditions/v1/${locKey}?apikey=${apiKey}`))\r\n      return res.data\r\n    }\r\n    catch (err) {\r\n     throw err;\r\n    }\r\n}\r\n\r\nasync function getUserCurrLocWeather(lat,lng) {\r\n  try {\r\n    const res = await Axios.get((`https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${apiKey}&q=${lat},${lng}`))\r\n    return res.data\r\n  }\r\n  catch (err) {\r\n   throw err;\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction getPosition() {\r\n  return new Promise((resolve, reject) => {\r\n      navigator.geolocation.getCurrentPosition(resolve, reject)\r\n  })\r\n}\r\n","import weatherService from './weatherService'\n\nexport default {\n  getAllFavorites, \n  addToFavorites,\n  removeFromFavorites,\n}\n\n\nvar favorites = [];\n\n async function getAllFavorites(){ \n  if(!_loadFromStorage('favorites')) return favorites\n  favorites = _loadFromStorage('favorites');\n  return _updateFavoritesWeather()\n }\n\nfunction addToFavorites(key,cityName,countryName,currWeather) { \n  favorites.push(_createFavorite(key,cityName,countryName,currWeather))\n  _saveToStorage('favorites', favorites)\n}\n\n\nfunction removeFromFavorites(favoriteKey){ \n  var favoriteIdx = favorites.findIndex(item => { \n    return item.key === favoriteKey;\n  })\n  favorites.splice(favoriteIdx,1);\n  _saveToStorage('favorites', favorites)\n  return favorites;\n}\n\n\nasync function _updateFavoritesWeather(){ \n  try{ \n     for(var i =0; i< favorites.length;i++){ \n      favorites[i].currWeather = await weatherService.getCurrWeather(favorites[i].key)\n     }\n     _saveToStorage('favorites', favorites)\n     return favorites\n  }\n  catch(err){ \n     throw err;\n  }\n  \n}\n\n\n\nfunction _createFavorite(key,cityName,countryName,currWeather){ \n  return { \n    key: key,\n    cityName: cityName,\n    countryName: countryName,\n    currWeather:currWeather,\n    _id:_makeId(),\n  }\n}\n\n\nfunction _makeId(length = 10) {\n  var txt = ''\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  for (var i = 0; i < length; i++) {\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\n  }\n  return txt\n}\n\nfunction _saveToStorage(key, value) {\n  var strValue = JSON.stringify(value);\n  localStorage.setItem(key, strValue);\n}\n\nfunction _loadFromStorage(key) {\n  return JSON.parse(localStorage.getItem(key))\n}\n","import types from \"../types\";\r\nimport favoriteService from \"../../services/favoriteService\";\r\n\r\n\r\n\r\n\r\nexport const getFavorites = () => {\r\n   return async (dispatch) => {\r\n       try{ \r\n           const response = await favoriteService.getAllFavorites()\r\n           await dispatch({ type: types.GET_FAVORITES, data: response })\r\n       }\r\n       catch(err){ \r\n           throw err;\r\n       }\r\n        \r\n    };\r\n};\r\n\r\nexport const addFavorite = (key,cityName,countryName,currWeather) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await favoriteService.addToFavorites(key,cityName,countryName,currWeather)\r\n        }\r\n        catch(err){ \r\n            throw err;\r\n        }\r\n         \r\n    };\r\n};\r\n\r\nexport const removeFavorite = (favoriteKey) => {\r\n    return async (dispatch) => {\r\n        try {\r\n          var response = await favoriteService.removeFromFavorites(favoriteKey)\r\n          await dispatch({ type: types.GET_FAVORITES, data: response })  \r\n        }\r\n        catch(err){ \r\n            throw err;\r\n        }\r\n        \r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import types from \"../types\";\r\nimport weatherService from \"../../services/weatherService\";\r\n\r\n\r\n\r\nexport const searchBy = (txt) => {\r\n    return async (dispatch) => {\r\n        try { \r\n            const resAutoComplete = await weatherService.getAutoComplete(txt)\r\n            const resCurrWeather = await weatherService.getCurrWeather(resAutoComplete.Key)\r\n            const resFiveDays =  await weatherService.getFiveDaysForcast(resAutoComplete.Key)\r\n            const currCityWeather = {\r\n                key: resAutoComplete.Key,\r\n                cityName: resAutoComplete.LocalizedName,\r\n                countryName: resAutoComplete.Country.ID,\r\n                fiveDaysForcast: resFiveDays.DailyForecasts,\r\n                cityWeather: resCurrWeather,\r\n            }\r\n            if(currCityWeather.cityWeather[0].WeatherIcon<=9)\r\n             currCityWeather.cityWeather[0].WeatherIcon = \"0\" + currCityWeather.cityWeather[0].WeatherIcon \r\n            dispatch({ type: types.GET_CURR_WEATHER_BY_SEARCH, data: currCityWeather })\r\n            \r\n        }\r\n        catch (err) {\r\n            throw err\r\n        } \r\n           \r\n    }\r\n};\r\n\r\nexport const getUserLoc = () => { \r\n    return async (dispatch) => {\r\n        try { \r\n            const res = await weatherService.getPosition()\r\n            const userLocDetails = await weatherService.getUserCurrLocWeather(res.coords.latitude, res.coords.longitude) \r\n            const userLocRes = {lat:res.coords.latitude, lng: res.coords.longitude, cityName: userLocDetails.LocalizedName}\r\n            dispatch({ type: types.GET_USER_LOC, data: userLocRes })\r\n        }\r\n        catch(err){ \r\n            searchBy('tel aviv');\r\n        }\r\n    }\r\n}\r\n\r\nexport const changeTemperature = () => { \r\n    return async (dispatch) => { \r\n        dispatch({ type: types.CHANGE_TEMPERATURE})\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FavoriteCard from '../componentes/FavoriteCard';\r\nimport {removeFavorite, getFavorites} from '../store/actions/favoriteActions';\r\nimport {searchBy} from '../store/actions/weatherActions';\r\nimport {Badge} from 'react-bootstrap';\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nclass favoritesList extends Component {\r\n\r\n    async componentDidMount() {\r\n        const { dispatch } = this.props\r\n        try {\r\n            await dispatch(getFavorites())\r\n        }\r\n        catch(err){ \r\n            this.notify('Cannot load page, please try again later')\r\n        }\r\n        \r\n    }\r\n\r\n    removeFavoriteItem = async (cityKey) => { \r\n        const { dispatch } = this.props\r\n        try {\r\n            await dispatch(removeFavorite(cityKey))\r\n            await dispatch(getFavorites())\r\n            this.notify('Removed successfully');\r\n        }\r\n        catch(err){ \r\n            this.notify('Cannot remove city from favorites');\r\n        }\r\n      \r\n    }\r\n\r\n    goToFavoriteItem = async (favoriteItemCityName) => { \r\n        const { dispatch } = this.props\r\n        try{ \r\n            await dispatch(searchBy(favoriteItemCityName))\r\n            this.props.history.push(`/`);\r\n        }\r\n        catch(err) {\r\n            this.notify('Cannot find item, please try again later');\r\n        }\r\n   \r\n    }\r\n\r\n\r\n    notify = (txt) => toast(txt);\r\n\r\n    render() {\r\n        const {favorites, celsius} = this.props;\r\n        return (\r\n            <div className=\"favorites-list\">\r\n                <ToastContainer />\r\n                {favorites.length > 0 && \r\n                     <h1><Badge className=\"badgeTitle\" variant=\"secondary\">Your favorites</Badge></h1>\r\n                }\r\n                {favorites.length > 0 && \r\n                    <div className=\"favorites-container\">\r\n                        { \r\n                        favorites.map((city) =>\r\n                           <FavoriteCard celsius={celsius} key={city._id} city={city} goToFavoriteItem={this.goToFavoriteItem} removeFavoriteItem={this.removeFavoriteItem}></FavoriteCard>\r\n                        )}\r\n                    </div>\r\n                }\r\n                {favorites.length === 0 && \r\n                    <div className=\"favorites-container\">\r\n                        <h1><Badge className=\"badgeTitle\" variant=\"secondary\">Your favorites are empty</Badge></h1>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ favoritesReducer, weatherReducer }) => {\r\n\r\n    const { favorites } = favoritesReducer;\r\n    const {celsius} = weatherReducer\r\n    \r\n    return {\r\n        favorites,\r\n        celsius\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(favoritesList)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navbar,Nav} from 'react-bootstrap';\r\nimport {changeTemperature} from '../store/actions/weatherActions';\r\n\r\n\r\n\r\nclass header extends Component {\r\n\r\n    state = {\r\n        light: true,\r\n    };\r\n\r\n    handleThemeChange = () => { \r\n       this.setState((state) => ( { ...state.light, light: !state.light } ));\r\n       if(this.state.light) { \r\n        document.body.style.backgroundColor = \"#121212\";\r\n       }\r\n       else if(!this.state.light) {\r\n        document.body.style.backgroundColor = \"#ffffff\"; \r\n       }\r\n    }\r\n\r\n    toggleTemperature = () => { \r\n        const { dispatch } = this.props\r\n        dispatch(changeTemperature())\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        const {light} = this.state;\r\n        const {celsius} = this.props;\r\n\r\n        return (\r\n            <div className=\"header\">\r\n              <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#/\"><img title=\"Geother\" width=\"50px\" height=\"50px\" alt=\"logo\" src={require('../imgs/icon.png')}></img> Geother</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link title=\"Home\" href=\"#/\">Home</Nav.Link>\r\n                        <Nav.Link title=\"Favorites\" href=\"#favorites\">Favorites</Nav.Link>\r\n                    </Nav>\r\n                    {!light &&\r\n                        <Nav.Link title=\"Change theme to Light\" onClick={this.handleThemeChange}>Light theme</Nav.Link>\r\n                    }\r\n                    {light &&\r\n                        <Nav.Link title=\"Change theme to Dark\" onClick={this.handleThemeChange}>Dark theme</Nav.Link>\r\n                    }\r\n                    {!celsius &&\r\n                        <Nav.Link title=\"Change to Celsius\" onClick={this.toggleTemperature}>Celsius</Nav.Link>\r\n                    }\r\n                    {celsius &&\r\n                        <Nav.Link title=\"Change to Fahrenheit\" onClick={this.toggleTemperature}>Fahrenheit</Nav.Link>\r\n                    }\r\n                </Navbar.Collapse>\r\n                \r\n               </Navbar>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = ({ weatherReducer}) => {\r\n    const { celsius } = weatherReducer;\r\n\r\n    return {\r\n       celsius\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(header)\r\n\r\n","import React, { Component } from 'react';\r\nimport {Card} from 'react-bootstrap';\r\n\r\nexport default class favortieItemCard extends Component {\r\n\r\n    render() {\r\n        const {day, weekDay, celsius}  = this.props;\r\n        const celTempMax = (day.Temperature.Maximum.Value - 32) * 5/9 \r\n        const celTempMin = (day.Temperature.Minimum.Value - 32) * 5/9\r\n        var dayIcon;\r\n        if(day.Day.Icon <=9 ) dayIcon = \"0\" + day.Day.Icon\r\n        else  dayIcon = day.Day.Icon;\r\n\r\n        return (\r\n            <Card style={{ width: '10rem', height: '12rem' }}>\r\n                <Card.Body title={weekDay}>\r\n                    <Card.Title>{weekDay}</Card.Title>\r\n                </Card.Body>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">{day.Day.IconPhrase}</Card.Subtitle> \r\n                <Card.Img variant=\"top\" src={`https://apidev.accuweather.com/developers/Media/Default/WeatherIcons/${dayIcon}-s.png`} />\r\n                {celsius &&\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">{Math.floor(celTempMax)}°C/{Math.floor(celTempMin)}°C</Card.Subtitle> \r\n                }\r\n                {!celsius &&\r\n                     <Card.Subtitle className=\"mb-2 text-muted\">{day.Temperature.Maximum.Value}°F/{day.Temperature.Minimum.Value}°F</Card.Subtitle>\r\n                }\r\n                \r\n            </Card>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {searchBy, getUserLoc} from '../store/actions/weatherActions';\r\nimport {getFavorites, addFavorite, removeFavorite} from '../store/actions/favoriteActions';\r\nimport DayCard from '../componentes/DayCard';\r\nimport {Card,Spinner} from 'react-bootstrap';\r\n\r\n\r\n\r\nclass homePage extends Component {\r\n\r\n    state = {\r\n        searchByCity: {txt:'' },\r\n        isCityInFavorites: false,\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { dispatch } = this.props\r\n        try {\r\n            await dispatch(getUserLoc())\r\n            await dispatch(getFavorites())\r\n            if(this.props.currCityWeather === null){\r\n                if(this.props.userLoc === null) await dispatch(searchBy('tel aviv'))\r\n                else await dispatch(searchBy(this.props.userLoc.cityName))  \r\n            }\r\n            \r\n            var checkIsCityInFavorites = this.props.favorites.find(item =>{ \r\n                return item.key === this.props.currCityWeather.key\r\n            })\r\n            if(checkIsCityInFavorites) this.setState((state) => ( { ...state.isCityInFavorites, isCityInFavorites: true } ));\r\n        }catch(err) {\r\n            this.notify('Cannot load page, please try again later')\r\n        }\r\n        \r\n    }\r\n\r\n    addToFavorites = async (e) => { \r\n        e.preventDefault();\r\n        var favoriteToAdd = JSON.parse(JSON.stringify(this.props.currCityWeather));\r\n        const { dispatch } = this.props\r\n        try{ \r\n              await dispatch(addFavorite(favoriteToAdd.key,favoriteToAdd.cityName,favoriteToAdd.countryName, favoriteToAdd.cityWeather[0]));\r\n              this.setState((state) => ( { ...state.isCityInFavorites, isCityInFavorites: true } ));\r\n              this.notify(favoriteToAdd.cityName +',' + favoriteToAdd.countryName + ' added successfully')\r\n        }catch(err){ \r\n            this.notify('Cannot add to favorites')\r\n        }\r\n      \r\n    }\r\n\r\n    removeFromFavorites = async (e) => { \r\n        e.preventDefault();  \r\n        const { dispatch } = this.props\r\n        try { \r\n            await dispatch(removeFavorite(this.props.currCityWeather.key))\r\n            await dispatch(getFavorites())\r\n            this.setState((state) => ( { ...state.isCityInFavorites, isCityInFavorites: false } ));\r\n            this.notify('Removed successfully')\r\n        }catch(err){ \r\n            this.notify('Cannot remove favorite city')\r\n        }\r\n\r\n    }\r\n\r\n    handleSearch = async (e) => { \r\n        const regex = /^[a-zA-Z ]+$/;\r\n        const { name } = e.target;\r\n        const value = e.target.value;\r\n        const chars = e.target.value.split('');\r\n        const char = chars.pop();\r\n        if (!regex.test(char)) { \r\n            e.target.value = this.state.searchByCity.txt;\r\n            this.notify('Only English letters please');\r\n        }\r\n        else this.setState((state) => ({ searchByCity: { ...state.searchByCity, [name]: value } }));\r\n        \r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const { dispatch } = this.props\r\n        try{ \r\n            await dispatch(searchBy(this.state.searchByCity.txt))\r\n            var checkIsCityInFavorites = this.props.favorites.find(item =>{ \r\n            return item.key === this.props.currCityWeather.key\r\n            })\r\n            if(checkIsCityInFavorites) this.setState((state) => ({  ...state.isCityInFavorites, isCityInFavorites: true } ));\r\n            else this.setState((state) => ({  ...state.isCityInFavorites, isCityInFavorites: false } ));\r\n        }catch(err){ \r\n            this.notify('Cannot find search query, please try again');\r\n        }\r\n       \r\n    };\r\n\r\n    notify = (txt) => toast(txt);\r\n\r\n    render() {\r\n\r\n        const {currCityWeather, celsius} = this.props;\r\n        const {isCityInFavorites} = this.state;\r\n        var weekDays = ['Sunday','Monday','Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday','Sunday','Monday','Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n        var todayDay = new Date().getDay();\r\n        \r\n        return (\r\n\r\n            <div className=\"homePage\">\r\n                 <ToastContainer />\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input className=\"searchInput\" required type=\"text\" name=\"txt\"  onChange={this.handleSearch} placeholder=\"Search weather in...\"></input>\r\n                    <button title=\"Search for a specific city\" className=\"searchBtn\">Search</button> \r\n                </form>\r\n                { currCityWeather !== null &&\r\n                    <div className=\"city-container\">\r\n                        <Card title={currCityWeather.cityName} className=\"city-card\" style={{ width: 'auto', height: '13rem' }}>\r\n                            <Card.Body>\r\n                                <Card.Title>{currCityWeather.cityName},{currCityWeather.countryName}</Card.Title>\r\n                            </Card.Body>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">{currCityWeather.cityWeather[0].WeatherText}</Card.Subtitle> \r\n                            <Card.Img variant=\"top\" src={`https://apidev.accuweather.com/developers/Media/Default/WeatherIcons/${currCityWeather.cityWeather[0].WeatherIcon}-s.png`} />\r\n                            {celsius && \r\n                                <Card.Subtitle className=\"mb-2 text-muted\">{currCityWeather.cityWeather[0].Temperature.Metric.Value}°C</Card.Subtitle> \r\n                            }\r\n                            {!celsius && \r\n                                <Card.Subtitle className=\"mb-2 text-muted\">{currCityWeather.cityWeather[0].Temperature.Imperial.Value}°F</Card.Subtitle> \r\n                            }\r\n                        \r\n                        </Card>\r\n                        {!isCityInFavorites &&\r\n                            <button onClick={this.addToFavorites} className=\"addBtn\">Add to favorites</button> \r\n                        }\r\n                        {isCityInFavorites&&\r\n                            <button onClick={this.removeFromFavorites} className=\"removeBtn\">Remove from favorites</button> \r\n                        }\r\n                        \r\n                    </div>\r\n                }\r\n                \r\n                \r\n                { currCityWeather !== null &&\r\n                <div className=\"fiveDays-container\">\r\n                         {\r\n                        currCityWeather.fiveDaysForcast.map((day,idx) =>\r\n                            <DayCard celsius={celsius} weekDay={weekDays[todayDay+idx+1]} day={day} key={day.Date}></DayCard>\r\n                        )}\r\n                </div>\r\n                }\r\n                { currCityWeather === null &&\r\n                    <Spinner animation=\"grow\" variant=\"info\" /> \r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ weatherReducer, favoritesReducer }) => {\r\n    const { favorites, currFavorite } = favoritesReducer;\r\n    const { currCityWeather, userLoc, celsius } = weatherReducer;\r\n\r\n    return {\r\n       favorites,\r\n       currFavorite,\r\n       currCityWeather,\r\n       userLoc,\r\n       celsius\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(homePage)","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport favoritesList from './views/favoritesList';\nimport Header from './componentes/header';\nimport homePage from './views/homePage';\nimport './App.css';\n\n\n\nclass App extends Component {\n    \n    render() {\n        return (\n            <div className=\"App\">\n\n                <Router>\n                    <Header></Header>\n                    <Switch>\n                        <Route path=\"/\" exact component={homePage}/>\n                        <Route path=\"/favorites\" component={favoritesList}/>\n                    </Switch>\n                </Router>\n            </div>\n        )\n\n    }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport weatherReducer from './weatherReducer'\r\nimport favoritesReducer from './favoritesReducer'\r\n\r\n\r\n\r\n\r\nconst combinedReducer = combineReducers({\r\n    weatherReducer,\r\n    favoritesReducer,\r\n  })\r\n  \r\n  export default combinedReducer\r\n  ","import types from \"../types\";\r\n\r\nexport default function\r\n  usersReducer(state = {currCityWeather:null, userLoc:null, celsius:true}, action) {\r\n  switch (action.type) {\r\n    case types.GET_CURR_WEATHER_BY_SEARCH:\r\n      return { ...state, currCityWeather: action.data };\r\n    case types.GET_USER_LOC:\r\n      return { ...state, userLoc: action.data };\r\n    case types.CHANGE_TEMPERATURE:\r\n      return { ...state, celsius: !state.celsius };\r\n    default:\r\n      return state;\r\n  }\r\n}","import types from \"../types\";\r\n\r\nexport default function\r\n  postsReducer(state = { favorites:[], currFavorite:null }, action) {\r\n  switch (action.type) {\r\n    case types.GET_FAVORITES:\r\n      return { ...state, favorites: action.data };\r\n    case types.GET_FAVORITE_BY_ID:\r\n      return { ...state, currFavorite: action.data };\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './store/reducers' \n\nconst middleware = [ thunk ]\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger())\n}\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middleware)\n)\nReactDOM.render(<Provider store={store}>\n    <App /></Provider>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\nwindow.addEventListener( 'beforeinstallprompt', ( e ) => {\n  console.log('beforeinstallprompt event has fired')\n  e.prompt()\n});"],"sourceRoot":""}